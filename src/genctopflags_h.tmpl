/*
 * This is a set of cpp stuff
 * to generate code that will build the table that's used to map the
 * stack into a real C stack
 */

#define POINTER_CLASS 5 /* this is is a gcc specific thing that */
	/* may even very from gcc version to version, but works for 2.7 */

#define M(x) ({								\
		x vvv;							\
		(__builtin_classify_type (vvv) == POINTER_CLASS &&	\
						sizeof(x) != 3 ?	\
		   5UL							\
		 :							\
		   (sizeof(x) <= 4 ?					\
		     flagmap[sizeof(x)]					\
		    :							\
		     4UL						\
	            )							\
                 );							\
	     })

#define Point	notapoint
#define	Cell	notacell

#include "rsys/common.h"
#include "rsys/everything.h"

/* for `EXIT_SUCCESS' */
#include <stdlib.h>

#undef	Point
#undef	Cell

typedef	char Point[3];
typedef	char Cell[3];

#define void struct {}
#define register

unsigned long flagmap[] =
{
    0,
    1,
    2,
    3,
    4,
};

#undef	P0
#undef	P1
#undef	P2
#undef	P3
#undef	P4
#undef	P5
#undef	P6
#undef	P7
#undef	P8
#undef	P9
#undef	P10
#undef	P11

#define P11(v, t0, n0, t1, n1, t2, n2, t3, n3, t4, n4, t5, n5, t6, n6, t7, n7, t8, n8, t9, n9, t10, n10, t11, n11) \
    printf("#define CTOP_SPECIAL_A11_VALUE\t0x%016llXLL\n" \
	"#define CTOP_" #n0 " CTOP_A11_MAGIC\n",	\
	 (long long) M(t0) +		\
	((long long) M(t1) << 3) +		\
	((long long) M(t2) << 6) +		\
	((long long) M(t3) << 9) +		\
	((long long) M(t4) << 12) +		\
	((long long) M(t5) << 15) +		\
	((long long) M(t6) << 18) +		\
	((long long) M(t7) << 21) +		\
	((long long) M(t8) << 24) +		\
	((long long) M(t9) << 27) +		\
	((long long) M(t10) << 30) +		\
	((long long) M(t11) << 33) );

#define P10(v, t0, n0, t1, n1, t2, n2, t3, n3, t4, n4, t5, n5, t6, n6, t7, n7, t8, n8, t9, n9, t10, n10) \
    printf("#define CTOP_SPECIAL_A10_VALUE\t0x%016llXLL\n" \
	"#define CTOP_" #n0 " CTOP_A10_MAGIC\n",	\
	 (long long) M(t0) +		\
	((long long) M(t1) << 3) +		\
	((long long) M(t2) << 6) +		\
	((long long) M(t3) << 9) +		\
	((long long) M(t4) << 12) +		\
	((long long) M(t5) << 15) +		\
	((long long) M(t6) << 18) +		\
	((long long) M(t7) << 21) +		\
	((long long) M(t8) << 24) +		\
	((long long) M(t9) << 27) +		\
	((long long) M(t10) << 30) );

#define P9(v, t0, n0, t1, n1, t2, n2, t3, n3, t4, n4, t5, n5, t6, n6, t7, n7, t8, n8, t9, n9) \
    printf("#define CTOP_" #n0 "\t0x%08lX\n",	\
	 M(t0) +		\
	(M(t1) << 3) +		\
	(M(t2) << 6) +		\
	(M(t3) << 9) +		\
	(M(t4) << 12) +		\
	(M(t5) << 15) +		\
	(M(t6) << 18) +		\
	(M(t7) << 21) +		\
	(M(t8) << 24) +		\
	(M(t9) << 27));

#define P8(v, t0, n0, t1, n1, t2, n2, t3, n3, t4, n4, t5, n5, t6, n6, t7, n7, t8, n8) \
    printf("#define CTOP_" #n0 "\t0x%08lX\n",	\
	 M(t0) +		\
	(M(t1) << 3) +		\
	(M(t2) << 6) +		\
	(M(t3) << 9) +		\
	(M(t4) << 12) +		\
	(M(t5) << 15) +		\
	(M(t6) << 18) +		\
	(M(t7) << 21) +		\
	(M(t8) << 24));

#define P7(v, t0, n0, t1, n1, t2, n2, t3, n3, t4, n4, t5, n5, t6, n6, t7, n7) \
    printf("#define CTOP_" #n0 "\t0x%08lX\n",	\
	 M(t0) +		\
	(M(t1) << 3) +		\
	(M(t2) << 6) +		\
	(M(t3) << 9) +		\
	(M(t4) << 12) +		\
	(M(t5) << 15) +		\
	(M(t6) << 18) +		\
	(M(t7) << 21));

#define P6(v, t0, n0, t1, n1, t2, n2, t3, n3, t4, n4, t5, n5, t6, n6) \
    printf("#define CTOP_" #n0 "\t0x%08lX\n",	\
	 M(t0) +		\
	(M(t1) << 3) +		\
	(M(t2) << 6) +		\
	(M(t3) << 9) +		\
	(M(t4) << 12) +		\
	(M(t5) << 15) +		\
	(M(t6) << 18));

#define P5(v, t0, n0, t1, n1, t2, n2, t3, n3, t4, n4, t5, n5) \
    printf("#define CTOP_" #n0 "\t0x%08lX\n",	\
	 M(t0) +		\
	(M(t1) << 3) +		\
	(M(t2) << 6) +		\
	(M(t3) << 9) +		\
	(M(t4) << 12) +		\
	(M(t5) << 15));

#define P4(v, t0, n0, t1, n1, t2, n2, t3, n3, t4, n4) \
    printf("#define CTOP_" #n0 "\t0x%08lX\n",	\
	 M(t0) +		\
	(M(t1) << 3) +		\
	(M(t2) << 6) +		\
	(M(t3) << 9) +		\
	(M(t4) << 12));

#define P3(v, t0, n0, t1, n1, t2, n2, t3, n3) \
    printf("#define CTOP_" #n0 "\t0x%08lX\n",	\
	 M(t0) +		\
	(M(t1) << 3) +		\
	(M(t2) << 6) +		\
	(M(t3) << 9));

#define P2(v, t0, n0, t1, n1, t2, n2) \
    printf("#define CTOP_" #n0 "\t0x%08lX\n",	\
	 M(t0) +		\
	(M(t1) << 3) +		\
	(M(t2) << 6));

#define P1(v, t0, n0, t1, n1)	\
    printf("#define CTOP_" #n0 "\t0x%08lX\n",	\
	 M(t0) +		\
	(M(t1) << 3));

#define P0(v, t0, n0)		\
    printf("#define CTOP_" #n0 "\t0x%08lX\n",	\
	 M(t0));

int
main ()
{
  puts ("#define CTOP_A10_MAGIC 6\n"
	"#define CTOP_A11_MAGIC 7");
@fndecls@
  return EXIT_SUCCESS;
}
